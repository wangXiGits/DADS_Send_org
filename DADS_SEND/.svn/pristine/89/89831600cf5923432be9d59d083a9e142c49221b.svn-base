package com.cmcc.mina.state.milink.sports.impl;

import java.util.Calendar;

import org.apache.mina.core.buffer.IoBuffer;
import org.apache.mina.core.session.IoSession;

import com.cmcc.mina.packet.milink.sports.LoginPacket;
import com.cmcc.mina.state.milink.SportsPacketHandleState;
import com.cmcc.mina.util.DataTypeChangeHelper;
import com.cmcc.mina.util.Logger;
import com.cmcc.mina.util.MLinkCRC;
import com.cmcc.mina.util.ParamInfoSendUtil;

public class SportNo1LoginState implements SportsPacketHandleState {
/*
 * (non-Javadoc)
 * @see com.cmcc.mina.state.sports.DataHandleState#handlePacket(org.apache.mina.core.session.IoSession, java.lang.Object)
 */
	@Override
	public boolean handlePacket(IoSession session,Object message) {
		log.info(this.getClass().getSimpleName()+".handlePacket() begin...");
		LoginPacket packet = null;
		if(message!=null && message instanceof LoginPacket)
		{
			packet = (LoginPacket)message;
			/**
			 * 这样处理将会使未注册的设备上传不成功
			 */
			if(packet.getPatientID()==null || "".equals(packet.getPatientID().trim()))
			{
				//回复NAK
				//responseToClient(session);
				return false;
			}
			session.setAttribute("patientId",packet.getPatientID());
			session.setAttribute("deviceId", packet.getDeviceID());
			session.setAttribute("company",packet.getCompany());
			session.setAttribute("loginTime",packet.getLoginTime());
			session.setAttribute("appType",packet.getAppType());
			//回复ACK
			responseToClient(session);
			log.info(this.getClass().getSimpleName()+".handlePacket() end.");
			return true;
		}
		else
		{
			//回复NAK
			//responseToClient(session);
			return false;
		}
		
	}

	private void responseToClient(IoSession session)
	{
		byte [] ack = new byte[19];
		byte [] crc_c = new byte[4];
		ack[0] = -89;
		ack[1] = -72;
		ack[2] = 0;
		ack[3] = 1;
		ack[4] = 0;
		ack[5] = 0;
		ack[6] = 0;
		ack[7] = 19;
		ack[8] = 1;
		/***************************begin:guoyh 20130701 check need send config to stepcounter (1:loginOk   4:loginOk and needSend)***********/
		//  add by guoyh for PWS0006  20130731 
		if(ParamInfoSendUtil.checkNeedAskParamInfo((String)session.getAttribute("patientId"))){
			ack[9] = 4;
			Logger.writeLog("patientID"+session.getAttribute("patientId")+" has param data to send to stepcounter");
		}else{
			ack[9] = 1;
			Logger.writeLog("patientID"+session.getAttribute("patientId")+" has no param data to send to stepcounter");
		}
		/***************************end：guoyh 20130701 check need send config to stepcounter***********/
		Calendar cal=Calendar.getInstance();
		int year=cal.get(Calendar.YEAR);
		int month=cal.get(Calendar.MONTH)+1;
		int day=cal.get(Calendar.DAY_OF_MONTH);
		int hour=cal.get(Calendar.HOUR_OF_DAY);
		int minute=cal.get(Calendar.MINUTE);
		int second=cal.get(Calendar.SECOND);
		byte[] year_b = DataTypeChangeHelper.int2byte(year);
		byte[] month_b = DataTypeChangeHelper.int2byte(month);
		byte[] day_b = DataTypeChangeHelper.int2byte(day);
		byte[] hour_b = DataTypeChangeHelper.int2byte(hour);
		byte[] minute_b = DataTypeChangeHelper.int2byte(minute);
		byte[] second_b = DataTypeChangeHelper.int2byte(second);
		ack[10] = year_b[1];
		ack[11] = year_b[0];
		ack[12] = month_b[0];
		ack[13] = day_b[0];
		ack[14] = hour_b[0];
		ack[15] = minute_b[0];
		ack[16] = second_b[0];
		
		crc_c = MLinkCRC.crc16(ack);
		ack[17] = crc_c[0];
		ack[18] = crc_c[1];	

		session.write(IoBuffer.wrap(ack));
	}
}

package com.cmcc.mina.state.jiays.impl;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.mina.core.buffer.IoBuffer;
import org.apache.mina.core.session.IoSession;

import com.cmcc.mina.packet.jiays.LoginPacket;
import com.cmcc.mina.packet.jiays.No8BPBSPackage;
import com.cmcc.mina.state.jiays.JiaysPacketHandleState;
import com.cmcc.mina.util.MLinkCRC;
import com.cmcc.monitor.Util.C3P0Util;
import com.cmcc.monitor.Util.Constants;
import com.cmcc.monitor.Util.DateUtil;
import com.cmcc.monitor.Util.DeviceIDResolver;
import com.cmcc.send.observer.impl.SubjectFactory;

public class No8BPBSState implements JiaysPacketHandleState {

	@Override
	public boolean handlePacket(IoSession session, Object message) {
		log.info(this.getClass().getSimpleName()+".handlePacket() begin...");
		No8BPBSPackage packet = null;
		if (message != null && message instanceof No8BPBSPackage) {
			packet = (No8BPBSPackage) message;
			LoginPacket loginPacket = (LoginPacket) session.getAttribute("loginPackage");
			//将登陆信息拷贝到数据包里
			if(loginPacket!=null){
				packet.setDeviceID(loginPacket.getDeviceID());
				packet.setPatientID(loginPacket.getPatientID());
				packet.setCompany(loginPacket.getCompany());
				packet.setPassword(loginPacket.getPassword());
				packet.setAppType(loginPacket.getAppType());
			}
			boolean result  = false;
			if ("1".equals(packet.getDatatype())) {
				result = saveBPData(session, packet);
			}else if("2".equals(packet.getDatatype()) || "3".equals(packet.getDatatype())){
				result = saveBSData(session, packet);
			}else if("4".equals(packet.getDatatype())){
				//体重数据
			}
			// 回复ACK
			responseToClient(session, result);
			log.info(this.getClass().getSimpleName()
					+ ".handlePacket() end.");
			return result;
		}
		return false;
	}
	/**
	 * 佳医宝血压数据入库
	 * @param session
	 * @param packet
	 * @return
	 */
	private boolean saveBPData(IoSession session, No8BPBSPackage packet) {
		JSONArray dataValue = new JSONArray();
		JSONObject measureTime = new JSONObject();
		JSONObject heartrate = new JSONObject();
		JSONObject systolic = new JSONObject();
		JSONObject diastolic = new JSONObject();
		measureTime.put("measureTime", packet.getMeasureTime());
		heartrate.put("heartrate", packet.getHeartrate());
		systolic.put("systolic", packet.getHighpressure());
		diastolic.put("diastolic", packet.getLowpressure());
		dataValue.add(measureTime);
		dataValue.add(heartrate);
		dataValue.add(systolic);
		dataValue.add(diastolic);
		StringBuffer sql = new StringBuffer(
				"insert into bloodpressure(phone,deviceID,dataType,appType,company,receiveTime,realTime,dataValue) ");
		sql.append("values('").append(packet.getPatientID())
				.append("','").append(packet.getDeviceID())
				.append("','").append(Constants.DATATYPE_BLOODPRESSURE)
				.append("','").append(packet.getAppType())
				.append("','").append(packet.getCompany())
				.append("','").append(DateUtil.getCurrentTime())
				.append("','").append(packet.getMeasureTime())
				.append("','").append(dataValue.toString())
				.append("')");

		boolean result = C3P0Util.executeUpdate(sql.toString());
		if (result) {
			log.info("insert bloodpressure data success : "	+ sql.toString());
			/**
			 * 通知观察者启动发送线程
			 */
			SubjectFactory.getSubject(packet.getAppType(), Constants.DATATYPE_BLOODPRESSURE).notifyObserver();
		} else {
			log.info("!!!! insert bloodpressure data failure : " + sql.toString());
		}

		return result;
	}
	/**
	 * 佳医宝血糖数据入库
	 * @param session
	 * @param packet
	 * @return
	 */
	private boolean saveBSData(IoSession session, No8BPBSPackage packet) {
		JSONArray dataValue = new JSONArray();
		JSONObject measureTime = new JSONObject();
		JSONObject afterMeal = new JSONObject();
		JSONObject beforeMeal = new JSONObject();
		JSONObject type = new JSONObject();
		measureTime.put("measureTime", packet.getMeasureTime());
		String datatype = packet.getDatatype();
		if("2".equals(datatype)){
			beforeMeal.put("beforeMeal", packet.getBloodsugar());
			afterMeal.put("afterMeal", 0);
			type.put("type", 0);
		}else if("3".equals(datatype)){
			beforeMeal.put("beforeMeal", 0);
			afterMeal.put("afterMeal", packet.getBloodsugar());
			type.put("type", 1);
		}
		dataValue.add(measureTime);
		dataValue.add(afterMeal);
		dataValue.add(beforeMeal);
		dataValue.add(type);
		
		StringBuffer sql = new StringBuffer(
		"insert into bloodglucose(phone,deviceID,dataType,appType,company,receiveTime,realTime,dataValue) ");
		sql.append("values('").append(packet.getPatientID())
		.append("','").append(packet.getDeviceID())
		.append("','").append(Constants.DATATYPE_BLOODGLUCOSE)
		.append("','").append(DeviceIDResolver.searchAppTypeByDeviced(packet.getDeviceID()))
		.append("','").append(packet.getCompany())
		.append("','").append(DateUtil.getCurrentTime())
		.append("','").append(packet.getMeasureTime())
		.append("','").append(dataValue.toString())
		.append("')");
		
		boolean result = C3P0Util.executeUpdate(sql.toString());
		if (result) {
			/**
			 * 通知观察者启动发送线程
			 */
			SubjectFactory.getSubject(packet.getAppType(), Constants.DATATYPE_BLOODGLUCOSE).notifyObserver();
			log.info("insert bloodsugar data success : "	+ sql.toString());
		} else {
			log.info("!!!! insert bloodsugar data failure : " + sql.toString());
		}
		return result;
	}
	private void responseToClient(IoSession session, boolean isSuccess) {
		byte[] reply = new byte[13];
		reply[0] = -89; reply[1] = -72; reply[2] = 0; reply[3] = 2; //header
		reply[4] = 0; reply[5] = 0; reply[6] = 0; reply[7] = 13; //length
		reply[8] = 8; //type
		reply[9] = 2; //type 一次测量数据
		if(isSuccess)
			reply[10] = 14; //result
		else
			reply[10] = 15;
		//crc
		byte[] crc_c = new byte[2];
		crc_c = MLinkCRC.crc16(reply);
		reply[11] = crc_c[0];
		reply[12] = crc_c[1];
		
		session.write(IoBuffer.wrap(reply));
	}
}

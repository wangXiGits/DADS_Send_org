package com.cmcc.mina.component;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.apache.log4j.Logger;
import org.apache.mina.core.buffer.IoBuffer;

import com.cmcc.mina.packet.PackageData;
/**
 * 解码器构件的基本实现
 */
public abstract class PacketFilterComponent implements Component {
	public static Logger log = Logger.getLogger(PacketFilterComponent.class);
	List<Component> list = new ArrayList<Component>();
	
	@Override
	public void add(Component t) {
		list.add(t);
	}

	@Override
	public void remove(Component t) {
		list.remove(t);
	}

	@Override
	public void getChild(int i) {
		throw new UnsupportedOperationException();
	}

	/**
	 * 检查数据包是否满足特定要求
	 * @param buffer
	 * @return
	 * boolean
	 */
	public abstract boolean check(IoBuffer buffer);
	/**
	 * 将字节转换为数据包对象
	 * @param buffer
	 * @return
	 * PackageData
	 */
	protected abstract PackageData generateRealPackageData(IoBuffer buffer);
	
	//迭代模式：叠加递归算法进行编码
	public  PackageData getDataFromBuffer(IoBuffer buffer)
	{
		//没有子节点，该节点为叶子节点，直接生成data
		if(list.size()==0)
		{
			return generateRealPackageData(buffer);
		}
		//非叶子节点，调用叶子节点的方法生成data
		Iterator<Component> iterator = list.iterator();
		while(iterator.hasNext())
		{
			PacketFilterComponent filter = (PacketFilterComponent)iterator.next();
			if(filter.check(buffer))
				return filter.getDataFromBuffer(buffer);
		}
		return null;
	}
	/**
	 * 用于通过Spring注入
	 * @param list
	 */
	public void setList(List<Component> list) {
		this.list = list;
	}

}

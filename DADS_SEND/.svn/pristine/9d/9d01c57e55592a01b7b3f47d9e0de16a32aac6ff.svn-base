package com.cmcc.gateway.restful.Contorller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.cmcc.monitor.Util.C3P0Util;
import com.cmcc.monitor.Util.Constants;
import com.cmcc.monitor.Util.DeviceIDResolver;
import com.cmcc.monitor.Util.ValidateUtil;
import com.cmcc.monitor.api.Controller.BaseController;
/**
 * restful接口，上下文后面需要统一加上一层路径：/service
 * @author lwh
 */
@Controller
public class MHDataAccessController extends BaseController{
	private static Logger log = Logger.getLogger(MHDataAccessController.class);
	/**
	 * 数据上传接口
	 * @param apptype 应用类型
	 * @param datatype 数据类型
	 * @param deviceid 设备编号
	 * @param collectdate 上传时间
	 * @param datavalue 数据内容
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping(method=RequestMethod.POST, value="/dataAccess",params={"datas"})
	public void dataAccess(HttpServletRequest request,HttpServletResponse response){
		long beginTime = System.currentTimeMillis();
		log.debug("请求开始时间："+beginTime);
		log.info("the begin of dataAccess... \r\n");
		JSONObject result = new JSONObject();
		String param = request.getParameter("datas");
		log.info("datas length = "+param.length());
		log.debug("datas："+param);
		try {
			JSONObject map = JSONObject.fromObject(param).getJSONObject("data");
			dataInsertDB(result, map);
		} catch (Exception e) {
			log.error(e.getMessage());
			result.put("status", "FAILURE");
			result.put("info", "数据格式错误");
		}
		log.info(result.toString());
        log.info("the end of dataAccess.");
        log.debug("请求结束，共耗时："+(System.currentTimeMillis()-beginTime)+" ms");
		this.writeToClient(response, result);
	}
	private void dataInsertDB(JSONObject result, JSONObject map) {
		String appType = map.getString("appType");
		String deviceId = map.getString("deviceId");
		String dataType = map.getString("dataType");
		String sql="";
		String tablename="";
		if(Constants.DATATYPE_ECG.equals(dataType)){
		String collectDate = map.getString("collectDate");
		String dataValue = map.getString("dataValue");
		log.info("apptype="+appType+", datatype="+dataType+", deviceId="+deviceId+", collectdate="+collectDate);
		if(ValidateUtil.paramCheck(appType,deviceId,collectDate,dataType)){
			String phone = DeviceIDResolver.searchPatientidByDeviceid(deviceId);
			log.info("获取到手机号："+phone);
			if(ValidateUtil.paramCheck(phone)){
				if(Constants.DATATYPE_ECG.equals(dataType)){
					tablename= "ecgdata";
				}else if(Constants.DATATYPE_BLOODPRESSURE.equals(dataType)){
					tablename= "bloodpressure";			
				}else if(Constants.DATATYPE_BLOODGLUCOSE.equals(dataType)){
					tablename= "bloodglucose";			
				}else if(Constants.DATATYPE_HEARTFUNCTION.equals(dataType)){
					tablename= "heartfunction";			
				}else if(Constants.DATATYPE_SLEEP.equals(dataType)){
					tablename= "sleep";			
				}else if(Constants.DATATYPE_WEIGHT.equals(dataType)){
					tablename= "weight";			
				}else if(Constants.DATATYPE_SPO2.equals(dataType)){
					tablename= "spo2";			
				}else if(Constants.DATATYPE_STEPDETAIL.equals(dataType)){
					tablename= "sports";			
				}else if(Constants.DATATYPE_STEPEFFECTIVE.equals(dataType)){
					tablename= "sports";			
				}else if(Constants.DATATYPE_STEPCOUNT.equals(dataType)){
					tablename= "sports";			
				}
			    else {
					result.put("info", "无效数据包");
					result.put("status", "FAILURE");
			    }
				sql= "insert into "+tablename+" (phone,deviceId,apptype,dataType,realTime,datavalue,receiveTime) values(?,?,?,?,?,?,now())";
				C3P0Util.insertOrUpdateData(sql, phone,deviceId,appType,dataType,collectDate,dataValue);
				result.put("status", "SUCCESS");
			}else{
				result.put("status", "FAILUREURE");
				result.put("info", "无匹配手机号");
			}
		}else{
			result.put("status", "FAILURE");
			result.put("info", "参数信息不完整");
		}
		}
	}
}

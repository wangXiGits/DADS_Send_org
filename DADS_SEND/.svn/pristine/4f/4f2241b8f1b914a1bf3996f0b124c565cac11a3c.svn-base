package com.cmcc.monitor.DaoImpl;

import java.sql.SQLException;
import java.util.List;

import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.orm.hibernate3.HibernateCallback;
import org.springframework.orm.hibernate3.HibernateTemplate;
import org.springframework.stereotype.Component;

import com.cmcc.monitor.Dao.DatastatisticsDAO;
import com.cmcc.monitor.base.Domain.Datastatistics;

@Component
public class DatastatisticsDAOImpl implements DatastatisticsDAO {

	@Autowired
    private HibernateTemplate hibernateTemplate;
	@Override
	public void insert(Datastatistics entity) {
		this.hibernateTemplate.save(entity);
	}

	@Override
	public void update(Datastatistics entity) {
		this.hibernateTemplate.update(entity);
	}

	@Override
	public void delete(int id) {
		Datastatistics entity = this.findById(id);
		this.hibernateTemplate.delete(entity);
	}

	@Override
	public Datastatistics findById(int id) {
		return (Datastatistics)this.hibernateTemplate.get(Datastatistics.class,new Integer(id));
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Datastatistics> findScrollPage(final int page,final int pagesize,
			final String condition) {
		return (List<Datastatistics>)this.hibernateTemplate.executeFind(new HibernateCallback() {
			public Object doInHibernate(Session session) throws HibernateException,
					SQLException {
				Query query=session.createQuery("from Datastatistics o "+condition);
				query.setFirstResult((page-1)*pagesize);
				query.setMaxResults(pagesize);
				return query.list();
			}
		});
	}
}

package com.cmcc.gateway.restful.Contorller;

import java.util.Calendar;
import java.util.Date;
import java.util.Random;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONObject;

import org.apache.log4j.Logger;

import com.cmcc.monitor.Util.C3P0Util;
import com.cmcc.monitor.Util.DeviceIDResolver;
import com.cmcc.monitor.Util.ValidateUtil;
import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.Mongo;

public class  CommonMDBHandlerUtil{
	private static Logger log = Logger.getLogger(CommonHandlerUtil.class);
	public static String CommonHandlerMethod(HttpServletRequest request,
			String tablename,String dataTypeAssign) {
		JSONObject result = new JSONObject();
		String param = request.getParameter("datas");
		log.info("datas length = "+param.length());
		log.debug("datas："+param);
		try {
			JSONObject map = JSONObject.fromObject(param).getJSONObject("data");
			String dataType = map.getString("dataType");
			if(dataType!=null && dataType.equals(dataTypeAssign)){
				String appType = map.getString("appType");
				String deviceId = map.getString("deviceId");
				String collectDate = map.getString("collectDate");
				String dataValue = map.getString("dataValue");
				log.info("apptype="+appType+", datatype="+dataType+", deviceId="+deviceId+", collectdate="+collectDate);
				if(ValidateUtil.paramCheck(appType,deviceId,collectDate,dataType)){
					String phone = DeviceIDResolver.searchPatientidByDeviceid(deviceId);
					log.info("获取到手机号："+phone);
					if(ValidateUtil.paramCheck(phone)){
						String sql = "insert into  "+tablename+"(phone,deviceId,apptype,dataType,realTime,datavalue,receiveTime) values(?,?,?,?,?,?,now())";
						C3P0Util.insertOrUpdateData(sql, phone,deviceId,appType,dataType,collectDate,dataValue);
						result.put("status", "SUCCESS");
					}else{
						result.put("status", "FAILURE");
						result.put("info", "设备号未注册");
					}
				}else{
					result.put("status", "FAILURE");
					result.put("info", "参数信息不完整");
				}
			}else{
				result.put("info", "无效数据包");
				result.put("status", "FAILURE");
			}
		} catch (Exception e) {
			log.error(e.getMessage());
			result.put("status", "FAILURE");
			result.put("info", "数据格式错误");
		}
		log.info(result.toString());
		return result.toString();
	}
	
    public static void main(String[] args) throws Exception {
        Mongo mongo = new Mongo("localhost", 27017);
        DB db = mongo.getDB("test");
        DBCollection coll = db.getCollection("flt_evecurrent");

        // 删除表
        coll.drop();

        // 增加索引
        coll.createIndex(new BasicDBObject("ObjID", 1));
        coll.createIndex(new BasicDBObject("CreateTime", 1));

        // 增加记录
        Random random = new Random(System.currentTimeMillis());
        Calendar calendar = Calendar.getInstance();
        for (int fltId = 0; fltId < 1000000; fltId++) {
            if ((fltId % 10000) == 0) {
                System.out.println(fltId);
            }
            int nodeId = 0;
            int objId = random.nextInt(100);
            int stationId = objId;
            int eveType = 0;
            int severity = 0;
            calendar.set(2010, 9, fltId / 100000 + 1);
            Date reportTime = calendar.getTime();
            Date createTime = reportTime;
            String eveContent = "ContentContentContent";
            String eveDesc = "DescDescDesc";
            BasicDBObject obj = new BasicDBObject();
            obj.put("NodeID", nodeId);
            obj.put("FltID", fltId);
            obj.put("ObjID", objId);
            obj.put("StationID", stationId);
            obj.put("EveType", eveType);
            obj.put("Severity", severity);
            obj.put("ReportTime", reportTime);
            obj.put("CreateTime", createTime);
            obj.put("EveContent", eveContent);
            obj.put("EveDesc", eveDesc);
            coll.insert(obj);
        }
    }
}
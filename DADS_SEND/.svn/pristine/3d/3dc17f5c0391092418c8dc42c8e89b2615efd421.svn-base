package com.cmcc.monitor.test;


import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.Socket;
import java.util.Arrays;
import java.util.Calendar;

import org.apache.log4j.Logger;

import com.cmcc.mina.util.ByteUtil;
import com.cmcc.mina.util.MLinkCRC;
import com.cmcc.monitor.Util.C3P0Util;
import com.cmcc.monitor.Util.DateUtil;
import com.cmcc.monitor.Util.MyRandomUtil;
import com.cmcc.monitor.Util.PropertiesReader;

public class StepcountPackageThread implements Runnable {
	private static Logger log = Logger.getLogger(StepcountPackageThread.class);
	private int deviceId;
	private String device;
	private String prefix = "DEVID";
	private String currentTime = "";
	/**
	 * 测试单用户 发送指定时间数据
	 * @param deviceId
	 * @param measureTime
	 */
	public StepcountPackageThread(String deviceId,String measureTime)
	{
		this.device = deviceId;
		this.currentTime = measureTime;
	}
	/**
	 * 测试多用户发送当前时间数据
	 * @param id
	 */
	public StepcountPackageThread(int id)
	{
		this.device = C3P0Util.getData("select deviceID from usertbl where id="+id).get(0).get("deviceID");
		this.currentTime = DateUtil.getCurrentTime();
	}
	@Override
	public void run() {
		byte[] serverIp = new byte[4];
		serverIp[0] = (byte)127;
		serverIp[1] = (byte)0;
		serverIp[2] = (byte)0;
		serverIp[3] = (byte)1;


		InputStream in=null;
		OutputStream out=null;
		byte[] b = new byte[20];
		try{
			InetAddress address = InetAddress.getByAddress(serverIp);
			Socket client = new Socket(address,Integer.parseInt(PropertiesReader.getProp("tcpPort")));
			
			in = client.getInputStream();
			out = client.getOutputStream();
			
			//发送登陆包（忽略ACK）
			sentLoginPackage(out);
			
			in.read(b);
			log.info("login: "+Arrays.toString(b));
			
			//发送8号包方式三
			sendPackage8Three(out);
			
			in.read(b);
			log.info("3: "+Arrays.toString(b));
			
			//发送8号详细包方式一
//			sentPackage8One(out);
//			
//			in.read(b);
//			log.info("1: "+Arrays.toString(b));
			
			//发送8号详细包方式二
			sendPackage8Two(out);
			
			in.read(b);
			log.info("2: "+Arrays.toString(b));
			
			//发送8号详细包方式四
			sendPackage8Four(out);
			
			in.read(b);
			log.info("4: "+Arrays.toString(b));
			
			sentLogoutPackage(out);
			
			in.read(b);
			log.info("logout: "+Arrays.toString(b));
			out.close();
		}catch(Exception e)
		{
			e.printStackTrace();
		}
	}
	/**
	 * 发送登陆包
	 * @param out
	 * @throws IOException
	 */
	private void sentLoginPackage(OutputStream out) throws IOException {
		log.info("sentLoginPackage... "+device);
		byte[] sendData = null;
		//1、发送登陆包
		sendData = new byte[44];
		sendData[0] = -89;
		sendData[1] = -72;
		sendData[2] = 0;
		sendData[3] = 1;
		//The length of all package(big endian)
		ByteUtil.putIntByLarge(sendData, 44, 4);
		sendData[8] = 1;
		sendData[9] = -128;
		String deviceIdStr = this.device;
		
		char[] array = deviceIdStr.toCharArray();
		for(int i=0;i<array.length;i++)
		{
			sendData[10+i] = (byte)array[i];
		}
		//"123456".getBytes(0,16,sendData,26);
		//crc
		sendData[42] = 0;
		sendData[43] = 0;
		out.write(sendData);
		out.flush();
	}
	/**
	 * 发送8号简要包
	 * @param out
	 * @throws IOException
	 * @throws InterruptedException
	 */
	private void sentPackage8One(OutputStream out) throws IOException,
			InterruptedException {
		log.info("sentPackage8One... "+device);
		byte[] sendData = null;
		sendData = new byte[68];
		sendData[0] = -89;
		sendData[1] = -72;
		sendData[2] = 0;
		sendData[3] = 1;
		ByteUtil.putIntByLarge(sendData, 68, 4);
		sendData[8] = 8;
		sendData[9] = 1;
		sendData[10] = 1;//数据包类型：自动|主动
		
		Calendar c = DateUtil.getCalendar(currentTime);
		
		c.add(Calendar.DAY_OF_MONTH, -1);
		sendData[11] = (byte)(c.get(Calendar.YEAR)-2000);
		sendData[12] = (byte)(c.get(Calendar.MONTH)+1);
		sendData[13] = (byte)c.get(Calendar.DATE);
		
		sendData[18]=3;
		sendData[19]=5;
		sendData[20]=0;
		sendData[21]=3;
		
		sendData[22] = 60;//电池电量
		sendData[23] = 70;
		sendData[24] = 70;
		
		ByteUtil.putIntByLarge(sendData, (this.deviceId+1)*100, 25);
		ByteUtil.putIntByLarge(sendData, (int)(100*Math.random()), 29);
		ByteUtil.putIntByLarge(sendData, (this.deviceId+1)*100, 33);
		ByteUtil.putShortByLarge(sendData, (short)((this.deviceId+1)*10), 37);
		ByteUtil.putShortByLarge(sendData, (short)((this.deviceId+1)*10), 39);
		ByteUtil.putShortByLarge(sendData, (short)((this.deviceId+1)*10), 41);
		ByteUtil.putShortByLarge(sendData, (short)((this.deviceId+1)*10), 43);

		//前缀
		char[] prefixArr = prefix.toCharArray();
		for(int i=0;i<prefixArr.length;i++){
			sendData[45+i] = (byte) prefixArr[i];
		}
		
		String deviceIdStr = this.device;
		
		char[] array = deviceIdStr.toCharArray();
		for(int i=0;i<array.length;i++)
		{
			sendData[50+i] = (byte)array[i];
		}
		//crc
		sendData[66] = 0;
		sendData[67] = 0;
		
		out.write(sendData);
		out.flush();
	}
	/**
	 * 发送8号包详细数据: 包含8小时数据
	 * @param out
	 * @throws IOException
	 */
	private void sendPackage8Two(OutputStream out) throws IOException{
		log.info("sendPackage8Two..."+device);
		byte[] sendData = null;
		int hours = 8;
		sendData = new byte[33+114*hours];
		//Header(4)
		sendData[0] = -89;
		sendData[1] = -72;
		sendData[2] = 0;
		sendData[3] = 1;
		//Length(4)
		ByteUtil.putIntByLarge(sendData, 33+114*hours, 4);
		//Type(2)
		sendData[8] = 8;
		sendData[9] = 2;
		//USEDATA(114/h)
		Calendar c = DateUtil.getCalendar(currentTime);
		
		for (int j = 0; j < hours; j++) {
			//Year(2)
			ByteUtil.putShortByLarge(sendData, (short)(c.get(Calendar.YEAR)), j*114+10);
			sendData[j*114+12] = 0;
			sendData[j*114+13] = (byte)(c.get(Calendar.MONTH)+1);
			sendData[j*114+14] = (byte)c.get(Calendar.DATE);
			sendData[j*114+15] = (byte) (j+6);
			
			//每5分钟内的步数
			for (int i = 0; i < 12; i++) {
				ByteUtil.putShortByLarge(sendData, (short) (MyRandomUtil.getInt(0, 5)),
						j * 114 + 16 + i * 2);
			}
			//每5分钟内的卡路里
			for (int i = 0; i < 12; i++) {
				ByteUtil.putShortByLarge(sendData, (short) (MyRandomUtil.getInt(0, 90)),
						j * 114 + 39 + i * 2);
			}
			//每5分钟运动强度等级2
			for (int i = 0; i < 12; i++) {
				sendData[j * 114 + 63 + i] = 5;
			}
		}
		//前缀
		char[] prefixArr = prefix.toCharArray();
		for(int i=0;i<prefixArr.length;i++){
			sendData[10+114 * hours+i] = (byte) prefixArr[i];
		}
		//deviceID
		String deviceIdStr = this.device;
		
		char[] array = deviceIdStr.toCharArray();
		for(int i=0;i<array.length;i++)
		{
			sendData[15 + 114 * hours +i] = (byte)array[i];
		}
//		sendData[145] = 0;
//		sendData[146] = 0;
		out.write(sendData);
		out.flush();
	}
	
	/**
	 * 发送8号包 方式3
	 * @param out
	 * @throws IOException
	 */
	private void sendPackage8Three(OutputStream out) throws IOException{
		log.info("sendPackage8Three..."+device);
		byte[] sendData = null;
		sendData = new byte[88];
		//Header(4)
		sendData[0] = -89;
		sendData[1] = -72;
		sendData[2] = 0;
		sendData[3] = 1;
		//Length(4)
		ByteUtil.putIntByLarge(sendData, 88, 4);
		//Type(2)
		sendData[8] = 8;
		sendData[9] = 3;
		//USEDATA
		sendData[10] = 1;//数据包类型：自动|主动
		
		Calendar c = DateUtil.getCalendar(currentTime);
		sendData[11] = (byte)(c.get(Calendar.YEAR)-2000);
		sendData[12] = (byte)(c.get(Calendar.MONTH)+1);
		sendData[13] = (byte)c.get(Calendar.DATE);
		
		sendData[18]=3;
		sendData[19]=5;
		sendData[20]=0;
		sendData[21]=3;
		
		sendData[22] = 60;//电量
		sendData[23] = 70;//体重
		sendData[24] = 70;//步幅
		
		ByteUtil.putIntByLarge(sendData, (this.deviceId+1)*100, 25);
		ByteUtil.putIntByLarge(sendData, (int)(100*Math.random()), 29);
		ByteUtil.putIntByLarge(sendData, (this.deviceId+1)*100, 33);
		ByteUtil.putShortByLarge(sendData, (short)((this.deviceId+1)*10), 37);
		ByteUtil.putShortByLarge(sendData, (short)((this.deviceId+1)*10), 39);
		ByteUtil.putShortByLarge(sendData, (short)((this.deviceId+1)*10), 41);
		ByteUtil.putShortByLarge(sendData, (short)((this.deviceId+1)*10), 43);
		
		String deviceIdStr = this.device;
		//前缀
		char[] prefixArr = prefix.toCharArray();
		for(int i=0;i<prefixArr.length;i++){
			sendData[65+i] = (byte) prefixArr[i];
		}
		char[] array = deviceIdStr.toCharArray();
		for(int i=0;i<array.length;i++)
		{
			sendData[70+i] = (byte)array[i];
		}
		//crc
		sendData[86] = 0;
		sendData[87] = 0;
		out.write(sendData);
		out.flush();
	}
	/**
	 * 发送8号包方式四 包含8小时数据
	 * @param out
	 * @throws IOException
	 */
	private void sendPackage8Four(OutputStream out) throws IOException{
		log.info("sendPackage8Four..."+device);
		byte[] sendData = null;
		int hours = 8;
		sendData = new byte[33+114*hours];
		//Header(4)
		sendData[0] = -89;
		sendData[1] = -72;
		sendData[2] = 0;
		sendData[3] = 1;
		//Length(4)
		ByteUtil.putIntByLarge(sendData, 33+114*hours, 4);
		//Type(2)
		sendData[8] = 8;
		sendData[9] = 4;
		//USEDATA(114/h)
		Calendar c = DateUtil.getCalendar(currentTime);
		
		for (int j = 0; j < hours; j++) {
			//Year(2)
			ByteUtil.putShortByLarge(sendData, (short)(c.get(Calendar.YEAR)), j*114+10);
			sendData[j*114+12] = 0;
			sendData[j*114+13] = (byte)(c.get(Calendar.MONTH)+1);
			sendData[j*114+14] = (byte)c.get(Calendar.DATE);
			sendData[j*114+15] = (byte) (j+6);
			
			//每5分钟内的步数
			for (int i = 0; i < 12; i++) {
				ByteUtil.putShortByLarge(sendData, (short) (MyRandomUtil.getInt(0, 5)),
						j * 114 + 16 + i * 2);
			}
			//每5分钟内的卡路里
			for (int i = 0; i < 12; i++) {
				ByteUtil.putShortByLarge(sendData, (short) (MyRandomUtil.getInt(0, 90)),
						j * 114 + 39 + i * 2);
			}
			//每5分钟运动强度等级2
			for (int i = 0; i < 12; i++) {
				sendData[j * 114 + 63 + i] = 5;
			}
		}
		//deviceID
		String deviceIdStr = this.device;
		
		char[] array = deviceIdStr.toCharArray();
		for(int i=0;i<array.length;i++)
		{
			sendData[15 + 114 * hours +i] = (byte)array[i];
		}
//		sendData[145] = 0;
//		sendData[146] = 0;
		out.write(sendData);
		out.flush();
	}
	/**
	 * 发送退出包
	 * @param out
	 * @throws IOException
	 */
	private void sentLogoutPackage(OutputStream out) throws IOException {
		log.info("sentLogoutPackage... ");
		byte[] sendData = null;
		//1、发送退出吧
		sendData = new byte[12];
		byte [] crc_c = new byte[2];
		sendData[0] = -89;
		sendData[1] = -72;
		sendData[2] = 0;
		sendData[3] = 1;
		//The length of all package(big endian)
		ByteUtil.putIntByLarge(sendData, 12, 4);
		sendData[8] = 1;
		sendData[9] = 3;
		crc_c = MLinkCRC.crc16(sendData);
		//crc
		sendData[10] = crc_c[0];
		sendData[11] = crc_c[1];
		out.write(sendData);
		out.flush();
	}
}

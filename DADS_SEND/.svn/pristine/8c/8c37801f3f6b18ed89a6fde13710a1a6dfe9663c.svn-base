package com.cmcc.Util;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.Reader;

import net.sf.json.JSONObject;

import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.params.HttpMethodParams;

import com.cmcc.monitor.Util.PropertiesReader;

public class initProduct {
	private static String address = PropertiesReader.getProp("testUrl");

	public static void main(String[] args) {
		String value[] = {
				"{'appDesc':'我尚运动','appName':'WSYD2','appSendFlag':'WSYD_flag','appToggle':'on','appQueueName':'wsydQueue','appUrl':'http://10.2.44.105:8080/EMR/service/businessDataReceive?format=json'}",
				"{'appDesc':'我尚健康','appName':'WSJK2','appSendFlag':'WSJK_flag','appToggle':'on','appQueueName':'wsjkQueue','appUrl':'http://10.2.44.105:8080/EMR/service/businessDataReceive?format=json'}",
				"{'appDesc':'我尚心电','appName':'WSXD2','appSendFlag':'WSXD_flag','appToggle':'on','appQueueName':'wsxdQueue','appUrl':'http://10.2.44.105:8080/EMR/service/businessDataReceive?format=json'}",
				"{'appDesc':'我尚心呵护','appName':'WSXHH2','appSendFlag':'WSXHH_flag','appToggle':'on','appQueueName':'wsxhhQueue','appUrl':'http://10.2.44.105:8080/EMR/service/businessDataReceive?format=json'}",
				"{'appDesc':'我尚睡眠','appName':'WSSM2','appSendFlag':'WSSM_flag','appToggle':'on','appQueueName':'wssmydQueue','appUrl':'http://10.2.44.105:8080/EMR/service/businessDataReceive?format=json'}" };
		for (int i = 0; i < value.length; i++) {
			boolean gwPushResult = httpClientPost(
					address + "/saveProduct.json", "data", value[i]);
			System.out.println(i+" : "+gwPushResult);
		}

	}
	/**
	 * 发送post请求推送数据，根据响应结果判断发送成功和失败
	 * 
	 * @param url
	 * @param pairKey
	 * @param jsono
	 * @return boolean
	 */
	public static boolean httpClientPost(String url, String pairKey, String value) {
		boolean gwPushResult = false;
		StringBuilder responseString = new StringBuilder();
		HttpClient client = new HttpClient();
		//设置连接超时时间
		client.getHttpConnectionManager().getParams().setConnectionTimeout(5000);
		//设置响应超时时间
		client.getHttpConnectionManager().getParams().setSoTimeout(15000);
		PostMethod postM = null;
		try {
			postM = new PostMethod(url);
//			postM.addParameter(new NameValuePair(pairKey, value));
			postM.getParams().setParameter(HttpMethodParams.HTTP_CONTENT_CHARSET,"utf-8");  
			postM.setParameter(pairKey, value);
			int s = client.executeMethod(postM);
			System.out.println("s="+s);
			System.out.println(postM.getStatusLine());
			Reader reader = new InputStreamReader(postM.getResponseBodyAsStream(), "utf8");
			BufferedReader br = new BufferedReader(reader);
			String line = "";
			while (null != (line = br.readLine())) {
				responseString.append(line);
			}
			System.out.println(responseString);
			JSONObject jo = JSONObject.fromObject(responseString.toString());
			if ("success".equalsIgnoreCase(jo.getString("status"))) {
				gwPushResult = true;
			}
		} catch (Exception e) {
			gwPushResult = false;
			System.out.println(e.getMessage());
			e.printStackTrace();
		} finally {
			if(postM!=null)
			postM.releaseConnection();
			System.out.println("release..");
		}
		return gwPushResult;
}
}

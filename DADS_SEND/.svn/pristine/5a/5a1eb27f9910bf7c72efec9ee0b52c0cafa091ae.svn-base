package com.cmcc.monitor.api.Controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.cmcc.monitor.Service.ProductDatatypeService;
import com.cmcc.monitor.Util.DateUtil;
import com.cmcc.monitor.base.Domain.Datatype;
import com.cmcc.monitor.base.Domain.Product;
import com.cmcc.monitor.base.Domain.ProductDatatype;
import com.cmcc.send.observer.util.AppDatatypeInfoContext;
/**
 * 发送控制
 *
 */
@Controller
public class ProductDatatypeController extends BaseController{
	
	private static Logger log=Logger.getLogger(ProductDatatypeController.class);
	@Autowired

	private ProductDatatypeService productdatatypeService;
	@RequestMapping(value="/saveProductDatatype.json" ,params={"data"})
	public void saveproductdatatype(HttpServletRequest request,HttpServletResponse response){
		JSONObject result = new JSONObject();
		String param = request.getParameter("data");
		try {
			JSONObject jo = JSONObject.fromObject(param);
			Product product=new Product();
			Datatype datatype=new Datatype();
			ProductDatatype productdatatype=new ProductDatatype();
			productdatatype.setDatatype(datatype);
			datatype.setDatatypeId(jo.getInt("datatypeId"));
			productdatatype.setProduct(product);
			product.setAppId(jo.getInt("productId"));
			productdatatype.setToggle(jo.getString("toggle"));
			productdatatype.setUpdatetTime(DateUtil.getCurrentTime());
			productdatatypeService.insert(productdatatype);
			result.put("status", "SUCCESS");
		} catch (Exception e) {
			e.printStackTrace();
			result.put("status", "FAILURE");
			log.info(e.getMessage());
		}
		refreshContext();
        log.info("添加了productdatatype表,param: "+param);
		this.writeToClient(response, result);
	}
	@RequestMapping(value="/updateProductDatatype.json",params={"data"})
	public void updateproductDatatype(HttpServletRequest request,HttpServletResponse response) throws Exception
	{
		String param = request.getParameter("data").toString();
		//param=new String(param.getBytes("ISO-8859-1"), "utf-8");
		JSONObject result = new JSONObject();
		try {
			JSONObject jo = JSONObject.fromObject(param);
			
			Product product=new Product();
			Datatype datatype=new Datatype();
			ProductDatatype productdatatype=new ProductDatatype();
			productdatatype.setId(jo.getInt("id"));
			productdatatype.setDatatype(datatype);
			datatype.setDatatypeId(jo.getInt("datatypeId"));
			productdatatype.setProduct(product);
			product.setAppId(jo.getInt("productId"));
			productdatatype.setToggle(jo.getString("toggle"));
			productdatatype.setUpdatetTime(DateUtil.getCurrentTime());
			productdatatypeService.update(productdatatype);
			result.put("status", "SUCCESS");
		} catch (Exception e) {
			e.printStackTrace();
			result.put("status", "FAILURE");
			log.info(e.getMessage());
		}
		refreshContext();
        log.info("更新了表中productdatatype,param: "+param);
		this.writeToClient(response, result);
	}
	@RequestMapping(value="/deleteProductDatatype.json",params={"data"})
	public void deleteProductDatatype(HttpServletRequest request,HttpServletResponse response)
	{
		JSONObject result = new JSONObject();
		String param = request.getParameter("data");
		ProductDatatype productdatatype = new ProductDatatype();
		try {
			JSONObject jo=JSONObject.fromObject(param);
			
			productdatatype.setId(jo.getInt("id"));
			
			productdatatypeService.delete(productdatatype.getId());
			result.put("status", "SUCCESS");
		} catch (Exception e) {
			e.printStackTrace();
			result.put("status", "FAILURE");
			log.info(e.getMessage());
		}
		refreshContext();
        log.info("删除了表ProductDatatype中id："+productdatatype.getId()+" 的记录");
		this.writeToClient(response, result);
	}


	@RequestMapping(value="/queryProductDatatype.json")
	public void queryProductDatatype(HttpServletRequest request,HttpServletResponse response){
		List<ProductDatatype> list = productdatatypeService.findScrollPage(1, 1000, "");
		for (ProductDatatype pd : list) {
			pd.getDatatype().setProductDatatypes(null);
			pd.getProduct().setProductDatatypes(null);
		}
		JSONArray result = JSONArray.fromObject(list);
			log.info("查询了表productDatatype中的数据");
	 	this.writeToClient(response, result);
	} 
	/**
	 * 刷新内存中信息
	 */
	private static void refreshContext(){
		AppDatatypeInfoContext.initAppDatatype();
		log.info("内存中apptype_datatype 信息已更新");
	}
}
